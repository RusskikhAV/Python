"""
        Простая задача 4.0

Напомним, что взаимно простыми называются числа, которые не имеют общих делителей кроме 1.
Напишите программу, которая для каждого переданного числа находит список его взаимно простых.

Формат ввода:
    Задана последовательность чисел записанных через точку с запятой (;) и пробел.

Формат вывода:
    Список чисел с указанием взаимно простых ему среди переданных.
    Все числа должны быть выведены в порядке возрастания без повторений.
    Строки следует отформатировать по правилу:
        - число - взаимно простое 1, взаимно простое 2, ...
    Если для числа не было найдено ни одного взаимно простого, то и выводить его не требуется.
"""


# используем метод определения НОД из предыдущего задания
def nod(a, b):
    while a != b:
        if a != 0 and b != 0:
            if a > b:
                a = a - b
            else:
                b = b - a
    return a


# получаем искомую строку чисел, разбиваем по точке с запятой и пробелу, получаем лист чисел
str_number = input().split("; ")
# в двойном цикле проходим по листу, и проверяем у каждых двух чисел НОД,
# если он равен 1, значит эти два числа будут взаимно простыми, добавляем число в список
dict_simple_num = {}

for i in str_number:
    for j in str_number:
        if nod(int(i), int(j)) == 1:
            dict_simple_num[int(i)] = dict_simple_num.get(int(i), []) + [j]
# пройдёмся по словарю, где ключ число имеющее в значениях хотя-бы 1 взаимно простое число
for i in sorted(dict_simple_num):
    # создаём дополнительный словарь, в нем будут храниться уникальные взаимно простые числа j по отношению к i
    dict_new = {}
    print(i, '- ', end='')
    # в цикле добавляем элементы в словарь
    for j in dict_simple_num.get(i):
        dict_new.update({int(j): 1})
    count = 0
    # производим вывод информации, согласно шаблону
    for k in sorted(dict_new):
        if count == 0:
            print(k, end='')
            count += 1
        else:
            print(',', k, end='')
            count += 1
    print()
    count = 0
